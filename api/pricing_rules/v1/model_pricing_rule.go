/*
 * Pricing Rules API
 *
 * The Pricing Rules API manages a pricing rules of items 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PricingRule struct for PricingRule
type PricingRule struct {
	Rule int32 `json:"rule"`
	Sku string `json:"sku"`
	Weight int32 `json:"weight"`
}

// NewPricingRule instantiates a new PricingRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricingRule(rule int32, sku string, weight int32, ) *PricingRule {
	this := PricingRule{}
	this.Rule = rule
	this.Sku = sku
	this.Weight = weight
	return &this
}

// NewPricingRuleWithDefaults instantiates a new PricingRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricingRuleWithDefaults() *PricingRule {
	this := PricingRule{}
	return &this
}

// GetRule returns the Rule field value
func (o *PricingRule) GetRule() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *PricingRule) GetRuleOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *PricingRule) SetRule(v int32) {
	o.Rule = v
}

// GetSku returns the Sku field value
func (o *PricingRule) GetSku() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *PricingRule) GetSkuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *PricingRule) SetSku(v string) {
	o.Sku = v
}

// GetWeight returns the Weight field value
func (o *PricingRule) GetWeight() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *PricingRule) GetWeightOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *PricingRule) SetWeight(v int32) {
	o.Weight = v
}

func (o PricingRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rule"] = o.Rule
	}
	if true {
		toSerialize["sku"] = o.Sku
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullablePricingRule struct {
	value *PricingRule
	isSet bool
}

func (v NullablePricingRule) Get() *PricingRule {
	return v.value
}

func (v *NullablePricingRule) Set(val *PricingRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePricingRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePricingRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricingRule(val *PricingRule) *NullablePricingRule {
	return &NullablePricingRule{value: val, isSet: true}
}

func (v NullablePricingRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricingRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


